CREATE DATABASE NEWSPAPER;
USE NEWSPAPER;

CREATE TABLE USER (
    UserID INT AUTO_INCREMENT,
    FullName VARCHAR(50) COLLATE utf8_unicode_ci,
    Email VARCHAR(50),
    Password VARCHAR(50),
    DoB DATE,
    isAdministator INT DEFAULT 0 CHECK (isAdministator IN (0, 1)),
    CONSTRAINT PK_USER PRIMARY KEY (UserID)
);

CREATE TABLE SUBSCRIBER (
    SubscriberID INT,
    DateRegistered DATE,
    Duration INT,
    CONSTRAINT PK_SUBSCRIBER PRIMARY KEY (SubscriberID)
);

CREATE TABLE WRITER (
    WriterID INT,
    Alias VARCHAR(50) COLLATE utf8_unicode_ci,
    CONSTRAINT PK_WRITER PRIMARY KEY (WriterID)
);

CREATE TABLE EDITOR (
    EditorID INT,
    CONSTRAINT PK_EDITOR PRIMARY KEY (EditorID)
);

CREATE TABLE ARTICLE (
    ArticleID INT AUTO_INCREMENT,
    Title VARCHAR(255) COLLATE utf8_unicode_ci,
    DatePublished DATETIME,
    DatePosted DATETIME,
    Content LONGTEXT COLLATE utf8_unicode_ci,
    Abstract TINYTEXT COLLATE utf8_unicode_ci,
    Status CHAR(10) CHECK (Status IN ('Draft', 'Pending', 'Rejected', 'Approved', 'Published')),
    Reason TINYTEXT COLLATE utf8_unicode_ci,
    IsPremium INT DEFAULT 0 CHECK (IsPremium IN (0, 1)),
    ViewCount INT DEFAULT 0 CHECK (ViewCount >= 0),
    EditorID INT,
    WriterID INT,
    CONSTRAINT PK_ARTICLE PRIMARY KEY (ArticleID)
);

CREATE TABLE COMMENT (
    CommentID INT AUTO_INCREMENT,
    DatePosted DATE,
    Content TEXT COLLATE utf8_unicode_ci,
    ArticleID INT,
    SubscriberID INT,
    CONSTRAINT PK_COMMENT PRIMARY KEY (CommentID)
);

CREATE TABLE CATEGORY (
    CategoryID INT AUTO_INCREMENT,
    Name VARCHAR(50) COLLATE utf8_unicode_ci,
    CONSTRAINT PK_CATEGORY PRIMARY KEY (CategoryID)
);

CREATE TABLE EDITOR_CATEGORY (
    EditorID INT,
    CategoryID INT,
    CONSTRAINT PK_EDITOR_CATEGORY PRIMARY KEY (EditorID, CategoryID)
);

CREATE TABLE SUBCATEGORY (
    SubCategoryID INT AUTO_INCREMENT,
    Name VARCHAR(50) COLLATE utf8_unicode_ci,
    CategoryID INT,
    CONSTRAINT PK_SUBCATEGORY PRIMARY KEY (SubCategoryID)
);

CREATE TABLE ARTICLE_SUBCATEGORY (
    ArticleID INT,
    SubCategoryID INT,
    CONSTRAINT PK_ARTICLE_SUBCATEGORY PRIMARY KEY (ArticleID, SubCategoryID)
);

CREATE TABLE TAG (
    TagID INT AUTO_INCREMENT,
    Name VARCHAR(50) COLLATE utf8_unicode_ci,
    CONSTRAINT PK_TAG PRIMARY KEY (TagID)
);

CREATE TABLE ARTICLE_TAG (
    ArticleID INT,
    TagID INT,
    CONSTRAINT PK_ARTICLE_TAG PRIMARY KEY (ArticleID, TagID)
);

CREATE TABLE ARTICLE_URL (
    ArticleID INT,
    STT INT,
    URL TEXT,
    CONSTRAINT PK_ARTICLE_URL PRIMARY KEY (ArticleID, STT)
);

ALTER TABLE SUBSCRIBER 
ADD 
    CONSTRAINT FK_SUBSCRIBER_USER
    FOREIGN KEY (SubscriberID)
    REFERENCES USER(UserID) ON DELETE CASCADE;

ALTER TABLE WRITER
ADD 
    CONSTRAINT FK_WRITER_USER
    FOREIGN KEY (WriterID)
    REFERENCES USER(UserID) ON DELETE CASCADE;

ALTER TABLE EDITOR
ADD 
    CONSTRAINT FK_EDITOR_USER
    FOREIGN KEY (EditorID)
    REFERENCES USER(UserID) ON DELETE CASCADE;

ALTER TABLE COMMENT 
ADD 
    CONSTRAINT FK_COMMENT_ARTICLE
    FOREIGN KEY (ArticleID)
    REFERENCES ARTICLE(ArticleID) ON DELETE CASCADE;

ALTER TABLE COMMENT
ADD 
    CONSTRAINT FK_COMMENT_SUBSCRIBER
    FOREIGN KEY (SubscriberID)
    REFERENCES SUBSCRIBER(SubscriberID);

ALTER TABLE ARTICLE
ADD 
    CONSTRAINT FK_ARTICLE_EDITOR
    FOREIGN KEY (EditorID)
    REFERENCES EDITOR(EditorID) ON DELETE SET NULL;

ALTER TABLE ARTICLE
ADD 
    CONSTRAINT FK_ARTICLE_WRITER
    FOREIGN KEY (WriterID)
    REFERENCES WRITER(WriterID) ON DELETE SET NULL;

ALTER TABLE EDITOR_CATEGORY
ADD 
    CONSTRAINT FK_EDITOR_CATEGORY_EDITOR
    FOREIGN KEY (EditorID)
    REFERENCES EDITOR(EditorID) ON DELETE CASCADE;

ALTER TABLE EDITOR_CATEGORY
ADD 
    CONSTRAINT FK_EDITOR_CATEGORY_CATEGORY
    FOREIGN KEY (CategoryID)
    REFERENCES CATEGORY(CategoryID) ON DELETE CASCADE;

ALTER TABLE SUBCATEGORY
ADD 
    CONSTRAINT FK_SUBCATEGORY_CATEGORY
    FOREIGN KEY (CategoryID)
    REFERENCES CATEGORY(CategoryID) ON DELETE CASCADE;

ALTER TABLE ARTICLE_SUBCATEGORY
ADD 
    CONSTRAINT FK_ARTICLE_SUBCATEGORY_ARTICLE
    FOREIGN KEY (ArticleID)
    REFERENCES ARTICLE(ArticleID) ON DELETE CASCADE;

ALTER TABLE ARTICLE_SUBCATEGORY
ADD 
    CONSTRAINT FK_ARTICLE_SUBCATEGORY_SUBCATEGORY
    FOREIGN KEY (SubCategoryID)
    REFERENCES SUBCATEGORY(SubCategoryID) ON DELETE CASCADE;

ALTER TABLE ARTICLE_TAG
ADD 
    CONSTRAINT FK_ARTICLE_TAG_ARTICLE
    FOREIGN KEY (ArticleID)
    REFERENCES ARTICLE(ArticleID) ON DELETE CASCADE;

ALTER TABLE ARTICLE_TAG
ADD 
    CONSTRAINT FK_ARTICLE_TAG_TAG
    FOREIGN KEY (TagID)
    REFERENCES TAG(TagID) ON DELETE CASCADE;

ALTER TABLE ARTICLE_URL
ADD 
    CONSTRAINT FK_ARTICLE_URL_ARTICLE
    FOREIGN KEY (ArticleID)
    REFERENCES ARTICLE(ArticleID) ON DELETE CASCADE;

DELIMITER $$

CREATE TRIGGER TRG_SUBSCRIBER_INSERT
AFTER INSERT ON SUBSCRIBER
FOR EACH ROW
BEGIN
    DECLARE userType INT;
    SELECT isAdministator INTO userType
    FROM USER
    WHERE UserID = NEW.SubscriberID;

    IF userType = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cannot insert subscriber with administrator user';
    END IF;
    IF EXISTS (
        SELECT 1
        FROM EDITOR
        WHERE EditorID = NEW.SubscriberID
        UNION
        SELECT 1
        FROM WRITER
        WHERE WriterID = NEW.SubscriberID
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cannot insert subscriber with editor or writer user';
    END IF;
END$$

CREATE TRIGGER TRG_WRITER_INSERT
AFTER INSERT ON WRITER
FOR EACH ROW
BEGIN
    IF EXISTS (
        SELECT 1
        FROM USER U
        WHERE U.UserID = NEW.WriterID
        AND (U.isAdministator = 1
        OR NEW.WriterID IN (
            SELECT EditorID
            FROM EDITOR
            UNION
            SELECT SubscriberID
            FROM SUBSCRIBER
        ))
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cannot insert writer with administrator user';
    END IF;
END$$

CREATE TRIGGER TRG_EDITOR_INSERT
AFTER INSERT ON EDITOR
FOR EACH ROW
BEGIN
    IF EXISTS (
        SELECT 1
        FROM USER U
        WHERE U.UserID = NEW.EditorID
        AND (U.isAdministator = 1
        OR NEW.EditorID IN (
            SELECT WriterID
            FROM WRITER
            UNION
            SELECT SubscriberID
            FROM SUBSCRIBER
        ))
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cannot insert editor with administrator user';
    END IF;
END$$

DELIMITER ;
