<div class="row d-flex justify-content-center mt-5">
    <div class="col col-lg-12 col-md-12 col-sm-12 mb-4">
        <h1 class="writer-publish-news-title">Đăng bài viết mới</h1>
    </div>
    <form action="/writer/new" method="POST" class="writer-publish-news-container col col-lg-12 col-md-12 col-sm-12"
        enctype="multipart/form-data">
        <div class="mb-4">
            <label for="title" class="form-label input-title">Nhập tiêu đề</label>
            <input type="text" class="form-control input-field" id="title" name="title" required />
        </div>
        <div class="mb-4">
            <label for="abstract" class="form-label input-title">Nhập tóm tắt nội dung</label>
            <textarea class="form-control textarea-field" id="abstract" rows="10" name="abstract" required></textarea>
        </div>
        <div class="mb-4">
            <label for="backgroundImageArticle" class="form-label input-title">Ảnh đại diện bài viết</label>
            <input type="file" accept="image/*" multiple="false" class="form-control textarea-field"
                id="backgroundImageArticle" rows="10" />
            <input type="text" style="display: none;" id="backgroundImageArticleBase64" name="backgroundImageArticle">
            </input>
        </div>

        <div class="mb-4">
            <p class="input-title">Nhập nội dung</p>
            <textarea id="summernote" name="content" required></textarea>
        </div>
        <div class="mb-4">
            <label class="form-label input-title">Chọn chuyên mục</label>
            <div class="form-label" id="selectedCategory">Bạn đã chọn: </div>
            <div class="tree">
                <ul>
                    <li onclick="toggleNode(event)"> Chọn chuyên mục
                        <ul>
                            {{#each Categories}}
                            <li onclick="toggleNode(event)">
                                <label class="form-label">{{name}}</label>
                                <ul>
                                    {{#each SubCategories}}
                                    <li class="leaf">
                                        <label class="form-label" for="subcategory_{{id}}">{{name}}</label>
                                        <input type="radio" required data-category-fullname="{{fullname}}"
                                            name="category" value="{{id}}" id="subcategory_{{id}}">
                                    </li>
                                    {{/each}}
                                </ul>
                            </li>
                            {{/each}}
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
        <div class="mb-4">
            <label for="editor-tags" class="form-label fw-bold">Tags</label>
            <div class="d-flex mt-2">
                <input type="text" class="d-none" id="tags-submission" name="tags"/>
                <select id="editor-tags" class="form-control">
                    {{#each tags}}
                    <option value="{{id}}">{{name}}</option>
                    {{/each}}
                </select>
                <button type="button" id="add-tag-icon" class="btn btn-sm editor-add-tag">
                    <i class="bi bi-plus"></i>
                </button>
            </div>
            <div class="tagScrollView d-flex flex-wrap align-items-center" id="tag-container">
                {{#each data.tags}}
                <div
                    class="badge border border-primary text-primary me-2 mb-1 d-flex justify-content-between align-items-center">
                    <p data-id="{{id}}">{{name}}</p>
                    <button type="button" class="btn btn-sm btn-link text-danger p-0 delete-tag-button">
                        <i class="bi bi-x-circle ms-1"></i>
                    </button>
                </div>
                {{/each}}
            </div>
        </div>
        <div class="mb-4 w-100 d-flex align-center justify-content-between">
            <p class="input-title">Bài báo Premium</p>
            <label class="switch">
                <input type="checkbox" name="isPremium" />
                <span class="slider round"></span>
            </label>
        </div>
        <div class="writer-publish-news-footer d-flex justify-content-end w-100">
            <button type="submit" class="submit-button">
                Đăng
            </button>
        </div>
    </form>
</div>
{{#section 'script'}}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        function getAllTagIds() {
            var tagIds = [];
            $('#tag-container .badge p').each(function () {
                var tagId = $(this).attr("data-id");
                tagIds.push(tagId);
            });
            return tagIds;
        }

        // Add tag
        const addTagButton = $('#add-tag-icon');

        addTagButton.on('click', function () {
            let allTagIds = getAllTagIds();
            console.log(allTagIds);
            const tagValue = $('#editor-tags option:selected').text();
            const tagId = $('#editor-tags').val();

            if (allTagIds.includes(tagId))
                return;

            const html = `
                <div
                    class="badge border border-primary text-primary me-2 mb-1 d-flex justify-content-between align-items-center"
                >
                    <p data-id="${tagId}">${tagValue}</p>
                    <button
                        type="button"
                        class="btn btn-sm btn-link text-danger p-0 delete-tag-button"
                    >
                        <i class="bi bi-x-circle ms-1"></i>
                    </button>
                </div>
            `;
            const tagsContainer = $('#tag-container');
            tagsContainer.append(html);

            allTagIds.push(tagId);
            $('#tags-submission').val(allTagIds.join(','));
            //console.log('Add: ', $('#tags-submission').val());
        });

        // Delete tag
        $('#tag-container').on('click', '.delete-tag-button', function () {
            const parentDiv = $(this).parent();
            const tagValue = parentDiv.find('p').text().trim();

            parentDiv.remove();

            let allTagValues = $('#tags-submission').val().split(',');
            const index = allTagValues.indexOf(tagValue);

            if (index > -1) {
                allTagValues.splice(index, 1);
            }

            $('#tags-submission').val(allTagValues.join(','));
            //console.log('Del: ', $('#tags-submission').val());
        });
    });
</script>
<script>
    $('#tagsInput').tagsinput({
        onTagExists: function (item, $tag) {
            console.log('test');
        },
    });
</script>
<script>
    function toggleNode(event) {
        event.stopPropagation();
        const li = event.target.closest('li');
        if (li.classList.contains('leaf')) {
            return;
        }
        li.classList.toggle('expanded');
    }
    window.addEventListener('pageshow', () => {
        const radioButtons = document.querySelectorAll('.leaf input[type="radio"]');

        radioButtons.forEach(radio => {
            radio.addEventListener('change', function () {
                if (this.checked) {
                    onRadioSelect(this.getAttribute("data-category-fullname"));
                }
            });
            if (radio.checked)
                onRadioSelect(radio.getAttribute("data-category-fullname"));
        });
    });

    function onRadioSelect(value) {
        document.getElementById("selectedCategory").innerHTML = "Bạn đã chọn: " + value;
    }
</script>
<script>
    $("#backgroundImageArticle").fileinput({
        maxFileCount: 1,
        showUpload: false,
        previewFileType: 'image',
        allowedFileTypes: ['image']
    });

    $("#backgroundImageArticle").on("fileloaded", function (event, file) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $("#backgroundImageArticleBase64").val(e.target.result);
        };

        reader.readAsDataURL(file);
    });

    // Optional: Reset the hidden input when the file input is cleared
    $("#backgroundImageArticle").on("fileclear", function () {
        $("#backgroundImageArticleBase64").val("");
    });
</script>
{{/section}}