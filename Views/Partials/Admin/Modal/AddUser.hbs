<div class="modal fade" id="modal" tabindex="-1" aria-labelledby="modalLabel_" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header custom-modal-header">
                <h1 class="modal-title fs-5" style="width:100%; text-align: center;" id="modalLabel_">Thêm người dùng
                </h1>
            </div>
            <form method="post">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="emailInput">Email</label>
                        <input type="text" class="form-control" name="email" id="emailInput" placeholder="" required>
                    </div>
                    <div class="form-group">
                        <label for="nameInput">Họ tên</label>
                        <input type="text" class="form-control" name="fullname" id="nameInput" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="dobInput">Ngày sinh</label>
                        <input type="date" class="form-control" name="dob" id="dobInput" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="roleSelect" class="form-label" style="padding-top: 8px; width: 200px;">
                            Vai Trò
                        </label>
                        <select name="role" class="form-select" style="height: 40px;" id="roleSelect">
                            <option value="Admin">Admin</option>
                            <option value="User">User</option>
                            <option value="Writer">Writer</option>
                            <option value="Editor">Editor</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input type="password" class="form-control" name="password" id="passwordInput" value="123" placeholder="Default: 123" style="display: none;"> 
                    </div>
                    <div class="form-group" id="categoryGroup">
                        <div id="hiddenCategory">
                            <label for="hiddenInput" class="form-label" style="padding-top: 8px; width: 200px;">
                            Chuyên mục phụ trách
                            </label>
                            {{#each editorCat}}
                                <input type="hidden" class="form-control editorCat" id="hiddenInput{{id}}"
                                value="{{id}}" name="" readonly>
                                </input>
                            {{/each}}

                        </div>

                        <div class="categoryInputResult" id="categoryResult">
                            {{#each editorCat}}
                            <div class="categoryInputItem" data-value="{{id}}">
                                {{name}}
                                <span class="categoryInputItemRemove" onclick="removeCategoryItem(this)">×</span>
                            </div>
                            {{/each}}
                        </div>
                        <select class="form-select" style="height: 40px;" id="categorySelect">
                            {{#each Categories}}
                            <option value="{{id}}"> {{name}}</option>
                            {{/each}}
                        </select>
                        <button type="button" id="addBtn_{{id}}" class="btn actionBtn">Add</button>
                    </div>
                </div>

                <div class="modal-footer custom-modal-footer ">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="sumbit" class="btn actionBtn" formaction="/admin/user/new">Thêm</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    //if role khác editor thì ẩn category
document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".form-group").forEach((element) => {
        if (element.querySelector("select") && element.querySelector("select").id.includes("roleSelect")) {
            const categoryGroup = document.getElementById(`categoryGroup`);
            const roleSelect = document.getElementById(`roleSelect`);

            // Kiểm tra giá trị ban đầu để ẩn/hiện categoryGroup
            if (roleSelect.value !== "Editor") {
                categoryGroup.style.display = "none";
            }

            // Gắn sự kiện change để xử lý thay đổi
            roleSelect.addEventListener("change", () => {
                if (roleSelect.value === "Editor") {
                    categoryGroup.style.display = "block";
                } else {
                    categoryGroup.style.display = "none";
                }
            });
        }
    });
});

document.addEventListener("DOMContentLoaded", () => {
    // Lấy tất cả các nút Add
    document.querySelectorAll(".actionBtn").forEach(button => {
        button.addEventListener("click", (event) => {
            // Lấy ID từ nút
            const id = event.target.id.replace("addBtn_", "");

            // Lấy giá trị được chọn từ <select>
            const selectElement = document.getElementById(`categorySelect`);
            const selectedValue = selectElement.value;
            const selectedText = selectElement.options[selectElement.selectedIndex].text;

            // Kiểm tra xem mục đã tồn tại chưa
            const resultContainer = document.getElementById(`categoryResult`);
            const existingItem = resultContainer.querySelector(`[data-value="${selectedValue}"]`);
            if (existingItem) {
                return;
            }

            // Tạo một mục mới
            const newItem = document.createElement("div");
            newItem.className = "categoryInputItem";
            newItem.setAttribute("data-value", selectedValue);
            newItem.innerHTML = `
                ${selectedText} 
                <span class="categoryInputItemRemove" onclick="removeCategoryItem(this)">×</span>
            `;

            // Thêm vào danh sách
            resultContainer.appendChild(newItem);

            // Tìm div có id hiddenCategoryid tham chiếu
            const resultHiddenContainer = document.getElementById(`hiddenCategory`);

            const existingHiddenItem = resultHiddenContainer.querySelector(`[value="${selectedValue}"]`);
            if (existingHiddenItem) {
                existingHiddenItem.name = "category_add";
                return;
            }
            // Tạo input ẩn để gửi dữ liệu
            const newHiddenInput = document.createElement("input");
            newHiddenInput.type="hidden";
            newHiddenInput.className = `form-control editorCat`;
            newHiddenInput.id = `hiddenInput${selectedValue}`;
            newHiddenInput.value = selectedValue;
            newHiddenInput.name = "category_add";
            newHiddenInput.readOnly = true;
            // Chèn input mới vào DOM ngay sau input tham chiếu
            resultHiddenContainer.appendChild(newHiddenInput);
        });
    });
});

// Hàm xóa mục
function removeCategoryItem(element) {
    // Lấy ID của phần tử categoryInputResult
    const id = element.closest(".categoryInputResult").id.replace("categoryResult", "");
    
    // Lấy giá trị cần xóa
    const valueToRemove = element.parentElement.getAttribute("data-value");
    
    // Xóa mục khỏi DOM
    element.parentElement.remove();
    
    // Tìm và thay đổi name các input ẩn có giá trị tương ứng trong hiddenCategory
    const hiddenInputs = document.getElementById(`hiddenInput${valueToRemove}`)
    hiddenInputs.name = "category_remove";
}

</script>