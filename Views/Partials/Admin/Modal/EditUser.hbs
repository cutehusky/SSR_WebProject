<div class="modal fade" id="modal_{{id}}" tabindex="-1" aria-labelledby="modalLabel_" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header custom-modal-header">
                <h1 class="modal-title fs-5" style="width:100%; text-align: center;" id="modalLabel_">
                    Chỉnh sửa người dùng
                </h1>
            </div>
            <form method="post">
                <input type="text" value="{{id}}" name="id" style="display: none;">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="emailInput">Email</label>
                        <input type="text" value="{{email}}" class="form-control" name="email" id="emailInput"
                            placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="nameInput">Họ tên</label>
                        <input type="text" value="{{name}}" class="form-control" name="fullname" id="nameInput"
                            placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="dobInput">Ngày sinh</label>
                        <input value="{{formatDate dateOfBirth 'yyyy-MM-dd'}}" type="date" class="form-control" name="dob" id="dobInput"
                            placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="roleSelect_{{id}}" class="form-label" style="padding-top: 8px; width: 200px;">
                            Vai Trò
                        </label>
                        <select name="role" class="form-select" style="height: 40px;" id="roleSelect_{{id}}">
                            <option value="Admin" {{#if (eq role 'Admin' ) }}selected{{/if}}>
                                Admin
                            </option>
                            <option value="User" {{#if (eq role 'User' ) }}selected{{/if}}>
                                User
                            </option>
                            <option value="Writer" {{#if (eq role 'Writer' ) }}selected{{/if}}>
                                Writer
                            </option>
                            <option value="Editor" {{#if (eq role 'Editor' ) }}selected{{/if}}>
                                Editor
                            </option>
                        </select>
                    </div>
                
                    <div class="form-group" id="categoryGroup_{{id}}">
                        <div id="hiddenCategory{{id}}">
                            <label for="hiddenInput{{id}}" class="form-label" style="padding-top: 8px; width: 200px;">
                            Chuyên mục phụ trách
                            </label>
                            {{#each editorCat}}
                                <input type="hidden" class="form-control editorCat_{{../id}}" id="hiddenInput{{id}}"
                                value="{{id}}" name="" readonly>
                                </input>
                            {{/each}}

                        </div>

                        <div class="categoryInputResult" id="categoryResult_{{id}}">
                            {{#each editorCat}}
                            <div class="categoryInputItem" data-value="{{id}}">
                                {{name}}
                                <span class="categoryInputItemRemove" onclick="removeCategoryItem(this)">×</span>
                            </div>
                            {{/each}}
                        </div>
                        <select class="form-select" style="height: 40px;" id="categorySelect_{{id}}">
                            {{#each Categories}}
                            <option value="{{id}}"> {{name}}</option>
                            {{/each}}
                        </select>
                        <button type="button" id="addBtn_{{id}}" class="btn actionBtn">Add</button>
                    </div>
                </div>
                <div class="modal-footer custom-modal-footer ">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn actionBtn" formaction="/admin/user/edit">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    //if role khác editor thì ẩn category
    document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".form-group").forEach((element) => {
            if (element.querySelector("select") && element.querySelector("select").id.includes("roleSelect_")) {
                const id = element.querySelector("select").id.replace("roleSelect_", "");
                const categoryGroup = document.getElementById(`categoryGroup_${id}`);
                const roleSelect = document.getElementById(`roleSelect_${id}`);

                // Kiểm tra giá trị ban đầu để ẩn/hiện categoryGroup
                if (roleSelect.value !== "Editor") {
                    categoryGroup.style.display = "none";
                }

                // Gắn sự kiện change để xử lý thay đổi
                roleSelect.addEventListener("change", () => {
                    if (roleSelect.value === "Editor") {
                        categoryGroup.style.display = "block";
                    } else {
                        categoryGroup.style.display = "none";
                    }
                });
            }
        });
    });

    document.addEventListener("DOMContentLoaded", () => {
        // Lấy tất cả các nút Add
        document.querySelectorAll(".actionBtn").forEach(button => {
            button.addEventListener("click", (event) => {
                // Lấy ID từ nút
                const id = event.target.id.replace("addBtn_", "");

                // Lấy giá trị được chọn từ <select>
                const selectElement = document.getElementById(`categorySelect_${id}`);
                const selectedValue = selectElement.value;
                const selectedText = selectElement.options[selectElement.selectedIndex].text;

                // Kiểm tra xem mục đã tồn tại chưa
                const resultContainer = document.getElementById(`categoryResult_${id}`);
                const existingItem = resultContainer.querySelector(`[data-value="${selectedValue}"]`);
                if (existingItem) {
                    return;
                }

                // Tạo một mục mới
                const newItem = document.createElement("div");
                newItem.className = "categoryInputItem";
                newItem.setAttribute("data-value", selectedValue);
                newItem.innerHTML = `
                    ${selectedText} 
                    <span class="categoryInputItemRemove" onclick="removeCategoryItem(this)">×</span>
                `;

                // Thêm vào danh sách
                resultContainer.appendChild(newItem);

                // Tìm div có id hiddenCategoryid tham chiếu
                const resultHiddenContainer = document.getElementById(`hiddenCategory${id}`);

                const existingHiddenItem = resultHiddenContainer.querySelector(`[value="${selectedValue}"]`);
                if (existingHiddenItem) {
                    existingHiddenItem.name = "category_add";
                    return;
                }
                // Tạo input ẩn để gửi dữ liệu
                const newHiddenInput = document.createElement("input");
                newHiddenInput.type="hidden";
                newHiddenInput.className = `form-control editorCat_${id}`;
                newHiddenInput.id = `hiddenInput${selectedValue}`;
                newHiddenInput.value = selectedValue;
                newHiddenInput.name = "category_add";
                newHiddenInput.readOnly = true;
                // Chèn input mới vào DOM ngay sau input tham chiếu
                resultHiddenContainer.appendChild(newHiddenInput);
            });
        });
    });

    // Hàm xóa mục
    function removeCategoryItem(element) {
        // Lấy ID của phần tử categoryInputResult
        const id = element.closest(".categoryInputResult").id.replace("categoryResult_", "");
        
        // Lấy giá trị cần xóa
        const valueToRemove = element.parentElement.getAttribute("data-value");
        
        // Xóa mục khỏi DOM
        element.parentElement.remove();
        
        // Tìm và thay đổi name các input ẩn có giá trị tương ứng trong hiddenCategory
        const hiddenInputs = document.getElementById(`hiddenInput${valueToRemove}`)
        hiddenInputs.name = "category_remove";
    }


</script>